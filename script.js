import{initializeApp}from "https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js";import{getFirestore,collection,doc,setDoc,getDoc,updateDoc,arrayUnion,query,where,orderBy,limit,getDocs,onSnapshot}from "https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore.js";import{getAuth,signInWithEmailAndPassword,signOut,onAuthStateChanged}from "https://www.gstatic.com/firebasejs/10.12.2/firebase-auth.js";const firebaseConfig={apiKey:"AIzaSyAIMQbZZjIb-Z_sNJ4_7XhNz0DtiNnSSfg",authDomain:"shipment-bec8d.firebaseapp.com",projectId:"shipment-bec8d",storageBucket:"shipment-bec8d.appspot.com",messagingSenderId:"83538524138",appId:"1:83538524138:web:c06cf1b00915ea1f606493",measurementId:"G-XHDE3ZMCEY"};const app=initializeApp(firebaseConfig);const db=getFirestore(app);const auth=getAuth(app);const statusOrder=["Shipment Created","Shipped from India","In Transit","Reached Destination Country","In Local Facility","Out for Delivery","Delivered"];const statusIcons={"Shipment Created":"fas fa-box","Shipped from India":"fas fa-ship","In Transit":"fas fa-plane","Reached Destination Country":"fas fa-flag-checkered","In Local Facility":"fas fa-warehouse","Out for Delivery":"fas fa-truck","Delivered":"fas fa-check-circle"};const statusBadges={"Shipment Created":"status-created","Shipped from India":"status-shipped","In Transit":"status-transit","Reached Destination Country":"status-arrived","In Local Facility":"status-arrived","Out for Delivery":"status-delivery","Delivered":"status-delivered"};const pages={'tracking':document.getElementById('tracking-page'),'admin-login':document.getElementById('admin-login-page'),'admin-dashboard':document.getElementById('admin-dashboard-page')};const allowedAdminEmails=['admin@gantasolutions.com','srasthainternationalcouriers@gmail.com'];function showPage(pageId){Object.values(pages).forEach(page=>{if(page)page.classList.remove('active');});if(pages[pageId])pages[pageId].classList.add('active');}
function showLoading(){const loadingSpinner=document.getElementById('loadingSpinner');const trackingResult=document.getElementById('trackingResult');const errorMessage=document.getElementById('errorMessage');if(loadingSpinner)loadingSpinner.style.display='block';if(trackingResult)trackingResult.style.display='none';if(errorMessage)errorMessage.style.display='none'}
function hideLoading(){const loadingSpinner=document.getElementById('loadingSpinner');if(loadingSpinner)loadingSpinner.style.display='none'}
if(window.location.hash==='#admin'){showPage('admin-login')}else{showPage('tracking');initTrackingPage()}
function initTrackingPage(){const trackingForm=document.getElementById('trackingForm');const trackingResult=document.getElementById('trackingResult');const errorMessage=document.getElementById('errorMessage');const errorText=document.getElementById('errorText');if(trackingForm){trackingForm.addEventListener('submit',async function(e){e.preventDefault();const trackingNumber=document.getElementById('trackingNumber').value.trim().toUpperCase();if(!trackingNumber.startsWith('SIC')||trackingNumber.length!==11){showError('Please enter a valid tracking number starting with SIC followed by 8 characters (e.g., SIC00000001).');return}
try{showLoading();const docRef=doc(db,'shipments',trackingNumber);const docSnap=await getDoc(docRef);hideLoading();if(docSnap.exists()){const shipment=docSnap.data();displayShipmentDetails(shipment)}else{showError('No shipment found with this tracking number. Please check and try again.')}}catch(error){hideLoading();console.error("Error getting shipment: ",error);showError('An error occurred while fetching shipment details. Please try again later.')}})}
function displayShipmentDetails(shipment){document.getElementById('resultTrackingNumber').textContent=shipment.trackingNumber;const statusElement=document.getElementById('resultStatus');statusElement.textContent=shipment.status;statusElement.className='value';const badgeClass=statusBadges[shipment.status]||'status-created';statusElement.innerHTML=`${shipment.status} <span class="status-badge ${badgeClass}">${shipment.status}</span>`;document.getElementById('resultOrigin').textContent=shipment.origin;document.getElementById('resultDestination').textContent=shipment.destination;document.getElementById('resultWeight').textContent=shipment.weight?`${shipment.weight} kg`:'-';document.getElementById('resultUpdated').textContent=formatDate(shipment.updatedAt.toDate());const timelineSteps=document.getElementById('timelineSteps');timelineSteps.innerHTML='';let currentStatusIndex=statusOrder.indexOf(shipment.status);statusOrder.forEach((status,index)=>{const step=document.createElement('div');step.className='timeline-step';if(index<currentStatusIndex){step.classList.add('completed')}else if(index===currentStatusIndex){step.classList.add('active')}
const statusTitle=document.createElement('h4');const statusIcon=document.createElement('i');statusIcon.className=statusIcons[status]||'fas fa-circle';statusTitle.appendChild(statusIcon);statusTitle.appendChild(document.createTextNode(status));const statusDesc=document.createElement('p');if(index<currentStatusIndex){const historyItem=shipment.history.find(item=>item.status===status);if(historyItem){statusDesc.textContent=historyItem.notes||'Status updated';const dateElement=document.createElement('span');dateElement.className='timeline-date';const dateIcon=document.createElement('i');dateIcon.className='far fa-clock';dateElement.appendChild(dateIcon);dateElement.appendChild(document.createTextNode(formatDate(historyItem.timestamp.toDate())));step.appendChild(dateElement)}}else if(index===currentStatusIndex){statusDesc.textContent=shipment.notes||'Current status'}else{statusDesc.textContent='Pending'}
step.appendChild(statusTitle);step.appendChild(statusDesc);timelineSteps.appendChild(step)});errorMessage.style.display='none';trackingResult.style.display='block'}
function showError(message){errorText.textContent=message;errorMessage.style.display='flex';trackingResult.style.display='none'}}
const loginForm=document.getElementById('loginForm');const loginError=document.getElementById('loginError');if(loginForm){loginForm.addEventListener('submit',async(e)=>{e.preventDefault();const email=document.getElementById('email').value;const password=document.getElementById('password').value;if(!allowedAdminEmails.includes(email.toLowerCase())){loginError.textContent='Access Denied: Only authorized administrators can log in.';loginError.style.color='red';loginError.style.display='block';return}
try{loginError.textContent='Logging in...';loginError.style.color='blue';loginError.style.display='block';await signInWithEmailAndPassword(auth,email,password)}catch(error){console.error('Login error:',error);if(error.code==='auth/user-not-found'){loginError.textContent='Admin not found. Please check your email.'}else if(error.code==='auth/wrong-password'){loginError.textContent='Incorrect password. Please try again.'}else if(error.code==='auth/invalid-email'){loginError.textContent='Invalid email format.'}else{loginError.textContent='Login failed: '+error.message}
loginError.style.color='red'}})}
function initAdminDashboard(){document.getElementById('adminEmail').textContent=auth.currentUser.email;document.getElementById('logoutBtn').addEventListener('click',(e)=>{e.preventDefault();signOut(auth).then(()=>{showPage('tracking');window.location.hash=''})});document.querySelectorAll('nav ul li a').forEach(link=>{link.addEventListener('click',function(e){e.preventDefault();document.querySelectorAll('nav ul li').forEach(li=>{li.classList.remove('active')});this.parentElement.classList.add('active');document.querySelectorAll('.main-content > section').forEach(section=>{section.style.display='none'});const sectionId=this.getAttribute('href').substring(1);document.getElementById(sectionId).style.display='block'})});document.querySelector('.close-modal').addEventListener('click',()=>{document.getElementById('editShipmentModal').style.display='none'});window.addEventListener('click',(e)=>{if(e.target===document.getElementById('editShipmentModal')){document.getElementById('editShipmentModal').style.display='none'}});setupEventListeners();loadDashboard()}
function setupEventListeners(){const createShipmentForm=document.getElementById('createShipmentForm');if(createShipmentForm){createShipmentForm.addEventListener('submit',async(e)=>{e.preventDefault();await createNewShipment()})}
const editShipmentForm=document.getElementById('editShipmentForm');if(editShipmentForm){editShipmentForm.addEventListener('submit',async(e)=>{e.preventDefault();await updateShipment()})}
const shipmentSearch=document.getElementById('shipmentSearch');if(shipmentSearch){shipmentSearch.addEventListener('input',()=>{filterShipments()})}
const statusFilter=document.getElementById('statusFilter');if(statusFilter){statusFilter.addEventListener('change',()=>{filterShipments()})}}
async function loadDashboard(){try{const shipmentsQuery=query(collection(db,'shipments'));const shipmentsSnapshot=await getDocs(shipmentsQuery);const totalShipments=shipmentsSnapshot.size;let inTransit=0;let delivered=0;shipmentsSnapshot.forEach(doc=>{const data=doc.data();if(data.status==='Delivered'){delivered++}else{inTransit++}});document.getElementById('totalShipments').textContent=totalShipments;document.getElementById('inTransit').textContent=inTransit;document.getElementById('delivered').textContent=delivered;const recentQuery=query(collection(db,'shipments'),orderBy('createdAt','desc'),limit(5));const recentSnapshot=await getDocs(recentQuery);const tableBody=document.querySelector('#recentShipmentsTable tbody');if(tableBody){tableBody.innerHTML='';recentSnapshot.forEach(doc=>{const data=doc.data();const row=createShipmentTableRow(data);tableBody.appendChild(row)})}
await loadAllShipments()}catch(error){console.error('Error loading dashboard:',error)}}
async function loadAllShipments(){try{const allQuery=query(collection(db,'shipments'),orderBy('createdAt','desc'));const allSnapshot=await getDocs(allQuery);const tableBody=document.querySelector('#shipmentsTable tbody');if(tableBody){tableBody.innerHTML='';allSnapshot.forEach(doc=>{const data=doc.data();const row=createShipmentTableRow(data,!0);tableBody.appendChild(row)})}}catch(error){console.error('Error loading shipments:',error)}}
function createShipmentTableRow(data,withActions=!1){const row=document.createElement('tr');const trackingCell=document.createElement('td');trackingCell.textContent=data.trackingNumber;row.appendChild(trackingCell);const customerCell=document.createElement('td');if(withActions){customerCell.textContent=data.customerName||'-'}else{customerCell.textContent=data.status}
row.appendChild(customerCell);const destinationCell=document.createElement('td');destinationCell.textContent=data.destination;row.appendChild(destinationCell);if(withActions){const statusCell=document.createElement('td');const badgeClass=statusBadges[data.status]||'status-created';statusCell.innerHTML=`<span class="status-badge ${badgeClass}">${data.status}</span>`;row.appendChild(statusCell)}
const updatedCell=document.createElement('td');updatedCell.textContent=formatDate(data.updatedAt.toDate());row.appendChild(updatedCell);if(withActions){const actionsCell=document.createElement('td');const editBtn=document.createElement('button');editBtn.className='btn btn-primary btn-sm';editBtn.innerHTML='<i class="fas fa-edit"></i> Edit';editBtn.addEventListener('click',()=>openEditModal(data));actionsCell.appendChild(editBtn);row.appendChild(actionsCell)}
return row}
function openEditModal(shipment){const modal=document.getElementById('editShipmentModal');const form=document.getElementById('editShipmentForm');document.getElementById('editTrackingNumber').value=shipment.trackingNumber;document.getElementById('editStatus').value=shipment.status;document.getElementById('editLocation').value=shipment.currentLocation||'';document.getElementById('editNotes').value=shipment.notes||'';modal.style.display='flex'}
async function createNewShipment(){try{const user=auth.currentUser;if(!user){alert('You must be logged in to create a shipment');return}
const trackingNumber='SIC'+Math.random().toString(36).substr(2,8).toUpperCase();const now=new Date();const shipment={trackingNumber:trackingNumber,customerId:user.uid,customerName:document.getElementById('customerName').value,customerEmail:document.getElementById('customerEmail').value,origin:document.getElementById('origin').value,destination:document.getElementById('destination').value,weight:parseFloat(document.getElementById('weight').value),dimensions:document.getElementById('dimensions').value,contents:document.getElementById('contents').value,status:'Shipment Created',currentLocation:document.getElementById('origin').value,notes:'Shipment created and ready for processing',createdAt:now,updatedAt:now,history:[{status:'Shipment Created',notes:'Shipment created and ready for processing',location:document.getElementById('origin').value,timestamp:now}]};await setDoc(doc(db,'shipments',trackingNumber),shipment);alert(`Shipment created successfully! Tracking Number: ${trackingNumber}`);document.getElementById('createShipmentForm').reset();await loadDashboard()}catch(error){console.error("Error creating shipment: ",error);alert('Error creating shipment. Please try again.')}}
async function updateShipment(){try{const trackingNumber=document.getElementById('editTrackingNumber').value;const status=document.getElementById('editStatus').value;const location=document.getElementById('editLocation').value;const notes=document.getElementById('editNotes').value;const now=new Date();const historyUpdate={status:status,notes:notes,location:location,timestamp:now};await updateDoc(doc(db,'shipments',trackingNumber),{status:status,currentLocation:location,notes:notes,updatedAt:now,history:arrayUnion(historyUpdate)});alert('Shipment updated successfully!');document.getElementById('editShipmentModal').style.display='none';await loadDashboard()}catch(error){console.error("Error updating shipment: ",error);alert('Error updating shipment. Please try again.')}}
async function filterShipments(){try{const searchText=document.getElementById('shipmentSearch').value.toLowerCase();const statusFilter=document.getElementById('statusFilter').value;let shipmentsQuery;if(statusFilter){shipmentsQuery=query(collection(db,'shipments'),where('status','==',statusFilter),orderBy('createdAt','desc'))}else{shipmentsQuery=query(collection(db,'shipments'),orderBy('createdAt','desc'))}
const shipmentsSnapshot=await getDocs(shipmentsQuery);const tableBody=document.querySelector('#shipmentsTable tbody');if(tableBody){tableBody.innerHTML='';shipmentsSnapshot.forEach(doc=>{const data=doc.data();if(searchText&&!data.trackingNumber.toLowerCase().includes(searchText)){return}
const row=createShipmentTableRow(data,!0);tableBody.appendChild(row)})}}catch(error){console.error('Error filtering shipments:',error)}}
function formatDate(date){const options={year:'numeric',month:'short',day:'numeric',hour:'2-digit',minute:'2-digit'};return date.toLocaleDateString('en-US',options)}
onAuthStateChanged(auth,(user)=>{if(user){if(allowedAdminEmails.includes(user.email.toLowerCase())){showPage('admin-dashboard');initAdminDashboard()}else{signOut(auth).then(()=>{showPage('tracking');alert('Access Denied: Only authorized administrators can access this panel.')})}}else{if(window.location.hash==='#admin'){showPage('admin-login')}else{showPage('tracking');initTrackingPage()}}});
